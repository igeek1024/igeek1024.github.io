<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>采用草图-拉伸命令建立简单幕墙龙骨</title>
    <url>/2021/04/14/%E9%87%87%E7%94%A8%E8%8D%89%E5%9B%BE-%E6%8B%89%E4%BC%B8%E5%91%BD%E4%BB%A4%E5%BB%BA%E7%AB%8B%E7%AE%80%E5%8D%95%E5%B9%95%E5%A2%99%E9%BE%99%E9%AA%A8%20/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/lightgallery.min.css" /><div class=".article-gallery"<h1 id="1、采用草图-拉伸命令建立简单幕墙龙骨"><a href="#1、采用草图-拉伸命令建立简单幕墙龙骨" class="headerlink" title="1、采用草图-拉伸命令建立简单幕墙龙骨"></a>1、采用草图-拉伸命令建立简单幕墙龙骨</h1><hr>
<ul>
<li><strong>绘制截面草图</strong></li>
<li><strong>从CAD导入复杂截面的方法</strong></li>
<li><strong>添加拉伸特征</strong></li>
<li><strong>通过草图特征开孔</strong></li>
<li><strong>通过草图进行型材加工</strong></li>
<li><strong>通过参数管理器修改现有模型</strong></li>
<li><strong>给模型添加物理属性以及控制外观显示效果</strong></li>
<li><strong>通过工程图模块绘制型材加工图</strong><span id="more"></span>
<h1 id="草图"><a href="#草图" class="headerlink" title="草图"></a>草图</h1></li>
</ul>
<hr>
<p>在Inventor中，模型可由草图转换而来；我们通过草图+特征的方式来控制模型的生成。Inventor中支持二维或者三维的草图‘。对于常见的幕墙形式，我们一般使用二维草图来建立模型。建模的步骤一般为：1、新建零件；2、绘制草图（或者导入草图）；3、添加拉伸特征；4、添加加工特征（孔、铣缺、切割角度）；5、保存零件。</p>
<p><a href="https://i.loli.net/2018/12/06/5c08c744e2033.png" title="https://i.loli.net/2018/12/06/5c08c744e2033.png" class="gallery-item"><img src="https://i.loli.net/2018/12/06/5c08c744e2033.png" alt="https://i.loli.net/2018/12/06/5c08c744e2033.png"></a></p>
<p>新建零件</p>
<p><a href="https://i.loli.net/2018/12/06/5c08c8847cfd7.png" title="https://i.loli.net/2018/12/06/5c08c8847cfd7.png" class="gallery-item"><img src="https://i.loli.net/2018/12/06/5c08c8847cfd7.png" alt="https://i.loli.net/2018/12/06/5c08c8847cfd7.png"></a></p>
<p>选择工作平键建立二维草图</p>
<p><a href="https://i.loli.net/2018/12/06/5c08cedabcc95.png" title="https://i.loli.net/2018/12/06/5c08cedabcc95.png" class="gallery-item"><img src="https://i.loli.net/2018/12/06/5c08cedabcc95.png" alt="https://i.loli.net/2018/12/06/5c08cedabcc95.png"></a></p>
<p>绘制草图，注意草图的绘制方式与CAD画图不同，必须添加位置约束和尺寸约束，所有线条变为深蓝色后，说明线条被全约束，其位置和尺寸不会发生变动。</p>
<p><a href="https://www.notion.so/1-2-CAD-1b836a55f0694595a8763372f9a678fe">1.2、<strong>从CAD导入复杂截面的两种方法</strong></a></p>
<h1 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h1><p><a href="https://i.loli.net/2018/12/06/5c08cf9128f01.png" title="https://i.loli.net/2018/12/06/5c08cf9128f01.png" class="gallery-item"><img src="https://i.loli.net/2018/12/06/5c08cf9128f01.png" alt="https://i.loli.net/2018/12/06/5c08cf9128f01.png"></a></p>
<p>为草图添加拉伸特征，注意拉伸为实体的草图必须为封闭的，开放的草图只能拉伸出曲面。</p>
<h1 id="参数管理"><a href="#参数管理" class="headerlink" title="参数管理"></a>参数管理</h1><p><a href="https://i.loli.net/2018/12/10/5c0dc7160b7b2.png" title="https://i.loli.net/2018/12/10/5c0dc7160b7b2.png" class="gallery-item"><img src="https://i.loli.net/2018/12/10/5c0dc7160b7b2.png" alt="https://i.loli.net/2018/12/10/5c0dc7160b7b2.png"></a></p>
<p>可以通过参数管理直接调整草图内的尺寸，参数可以自行命名，且支持中文。</p>
<h1 id="定位特征和何如在零件上开孔"><a href="#定位特征和何如在零件上开孔" class="headerlink" title="定位特征和何如在零件上开孔"></a>定位特征和何如在零件上开孔</h1><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"video":{"url":"https://help.autodesk.com/videos/FxbXhkMjE6mPEYKKl9KG5_Qy2Y25oTLL/video.mp4"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io","token":"tokendemo"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>

<h1 id="iProperty指定零件的材料"><a href="#iProperty指定零件的材料" class="headerlink" title="iProperty指定零件的材料"></a>iProperty<strong>指定零件的材料</strong></h1><p><a href="https://i.loli.net/2018/12/10/5c0dc256e4652.png" title="https://i.loli.net/2018/12/10/5c0dc256e4652.png" class="gallery-item"><img src="https://i.loli.net/2018/12/10/5c0dc256e4652.png" alt="https://i.loli.net/2018/12/10/5c0dc256e4652.png"></a></p>
<p><a href="https://i.loli.net/2018/12/10/5c0dc871df940.png" title="https://i.loli.net/2018/12/10/5c0dc871df940.png" class="gallery-item"><img src="https://i.loli.net/2018/12/10/5c0dc871df940.png" alt="https://i.loli.net/2018/12/10/5c0dc871df940.png"></a></p>
<p>指定材料后，零件外观会默认变成材料的外观，如果要单独控制，请参考工具》》外观</p>
<h1 id="工程图"><a href="#工程图" class="headerlink" title="工程图"></a><strong>工程图</strong></h1><div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"theme":"#FADFA3","loop":true,"video":{"url":"https://help.autodesk.com/videos/h4bHhkMjE6FCmvrxaur79tu0d7oWmv8s/video.mp4"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io","token":"tokendemo"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>
<p>绘制零件加工图的方法</p>
</div><script src="/js/lightgallery.min.js"></script><script src="/js/lg-thumbnail.js"></script><script src="/js/lg-zoom.js"></script><script src="/js/lg-autoplay.js"></script><script src="/js/lg-fullscreen.js"></script><script src="/js/lg-pager.js"></script><script src="/js/lg-hash.js"></script><script src="/js/lg-video.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <tags>
        <tag>3d</tag>
        <tag>Inventor</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义Ubuntu SSH登录展示页</title>
    <url>/2021/03/30/%E8%87%AA%E5%AE%9A%E4%B9%89Ubuntu-SSH%E7%99%BB%E5%BD%95%E5%B1%95%E7%A4%BA%E9%A1%B5/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/lightgallery.min.css" /><div class=".article-gallery"<h1 id="自定义Ubuntu-SSH登录展示页"><a href="#自定义Ubuntu-SSH登录展示页" class="headerlink" title="自定义Ubuntu SSH登录展示页"></a>自定义Ubuntu SSH登录展示页</h1><p>重ubuntu 18.04开始，当用户从SSH登录后，终端将展示一些系统信和推广，这叫motd(message of the day)。这页面可以根据需求调整和定制。默认的登录展示页看起来像下面：</p>
<pre><code class="[bash]">Welcome to Ubuntu 20.10 (GNU/Linux 5.8.0-48-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Tue Mar 30 04:55:31 PM CST 2021

  System load:  0.0                Processes:                257
  Usage of /:   15.1% of 44.04GB   Users logged in:          1
  Memory usage: 24%                IPv4 address for docker0: 172.17.0.1
  Swap usage:   1%                 IPv4 address for ens160:  192.168.2.171

 * Introducing self-healing high availability clusters in MicroK8s.
   Simple, hardened, Kubernetes for production, from RaspberryPi to DC.

     https://microk8s.io/high-availability

0 updates can be installed immediately.
0 of these updates are security updates.


Last login: Mon Mar 29 12:54:59 2021 from 192.168.2.104</code></pre>
<span id="more"></span>

<p>由于每次展示的信息过多，一登录就冒一大堆字母，感觉受到了弹幕攻击，根据<code>/etc/update-motd.d</code> 目录下文件的可以分成以下几个部分：</p>
<h2 id="1-Header"><a href="#1-Header" class="headerlink" title="1.Header"></a>1.Header</h2><p>由 <strong>00-header</strong> 文件控制，负责展示<code>Welcome to Ubuntu 20.10 (GNU/Linux 5.8.0-48-generic x86_64)</code> 这一行信息，如果不需要可以移除文件的运行权限；</p>
<h2 id="2-Help-text"><a href="#2-Help-text" class="headerlink" title="2.Help-text"></a>2.Help-text</h2><p>由 <strong>10-help-text</strong>文件控制，负责展示:</p>
<pre><code class="[bash]"> * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage</code></pre>
<p>同样，不需要就移除文件的运行权限；</p>
<h2 id="3-Sysinfo"><a href="#3-Sysinfo" class="headerlink" title="3.Sysinfo"></a>3.Sysinfo</h2><p>由 <strong>50-landscape-sysinfo</strong>文件控制，负责展示：</p>
<pre><code class="[bash]">  System load:  0.0                Processes:                257
  Usage of /:   15.1% of 44.04GB   Users logged in:          1
  Memory usage: 24%                IPv4 address for docker0: 172.17.0.1
  Swap usage:   1%                 IPv4 address for ens160:  192.168.2.171</code></pre>
<p>这一行对我来说是需要的，暂时选择保留。</p>
<h2 id="4-动态motd"><a href="#4-动态motd" class="headerlink" title="4.动态motd"></a>4.动态motd</h2><p>这一行就是很关键的了，是ubuntu的广告展示。由于ubuntu免费提供服务，保留着也是一种对ubuntu的支持，但是也可以移除。这一行本质是访问页面 <a href="https://motd.ubuntu.com/">https://motd.ubuntu.com/</a>  这个页面是动态变化的，可能在不同的时间看到不同的内容，这段时间展示的是：</p>
<pre><code class="[bash]"> * Introducing self-healing high availability clusters in MicroK8s.
   Simple, hardened, Kubernetes for production, from RaspberryPi to DC.

     https://microk8s.io/high-availability</code></pre>
<p>不需要的移除<strong>50-motd-news</strong> 的运行权限。</p>
<h2 id="5-Update"><a href="#5-Update" class="headerlink" title="5.Update"></a>5.Update</h2><p>剩下的就是各种更新提醒，根据需要自行选择：</p>
<ul>
<li><strong>90-updates-available</strong></li>
<li><strong>91-release-upgrade</strong></li>
<li> <strong>92-unattended-upgrades</strong> </li>
<li> <strong>95-hwe-eol</strong></li>
<li> <strong>97-overlayroot</strong> </li>
<li> <strong>98-fsck-at-reboot</strong> </li>
<li> <strong>98-reboot-required</strong><br>这里我选择保留。</li>
</ul>
<p>所以我这里运行以下命令：</p>
<pre><code class="[bash]">sudo chmod -x /etc/update-motd.d/10-help-text
sudo chmod -x /etc/update-motd.d/50-motd-news</code></pre>
<p>重新登录后展示：</p>
<pre><code class="[bash]">Welcome to Ubuntu 20.10 (GNU/Linux 5.8.0-48-generic x86_64)

  System information as of Tue Mar 30 06:19:46 PM CST 2021

  System load:  0.0                Processes:                264
  Usage of /:   15.2% of 44.04GB   Users logged in:          1
  Memory usage: 25%                IPv4 address for docker0: 172.17.0.1
  Swap usage:   1%                 IPv4 address for ens160:  192.168.2.171

0 updates can be installed immediately.
0 of these updates are security updates.


Last login: Tue Mar 30 17:02:50 2021 from 192.168.2.104</code></pre>
<p>这就清爽多了。</p>
</div><script src="/js/lightgallery.min.js"></script><script src="/js/lg-thumbnail.js"></script><script src="/js/lg-zoom.js"></script><script src="/js/lg-autoplay.js"></script><script src="/js/lg-fullscreen.js"></script><script src="/js/lg-pager.js"></script><script src="/js/lg-hash.js"></script><script src="/js/lg-video.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>motd</tag>
      </tags>
  </entry>
  <entry>
    <title>ESXi下挂载iSCSI磁盘安装ubuntu server</title>
    <url>/2021/03/23/ESXi%E4%B8%8B%E6%8C%82%E8%BD%BDiSCSI%E7%A3%81%E7%9B%98%E5%AE%89%E8%A3%85ubuntu%20server/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/lightgallery.min.css" /><div class=".article-gallery"<h1 id="ESXi下挂载iSCSI磁盘安装ubuntu-server"><a href="#ESXi下挂载iSCSI磁盘安装ubuntu-server" class="headerlink" title="ESXi下挂载iSCSI磁盘安装ubuntu server"></a>ESXi下挂载iSCSI磁盘安装ubuntu server</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>近期搭上了HP MicroServer Gen8的末班车，替换掉原机器自带的G1610T，改用 Xeon E3-1285L V2，4G内存换成16G的。一台性能还看得过去的NAS便完工了。本次采用的ESXi虚拟方案，ESXi安装到机内U盘。ESXi里面安装了黑群晖，SATA控制器和USB3.0控制器直通给黑群晖。这个配置最多分配11GB内存到黑群晖，剩下的内存感觉有点浪费，不如再搞一台ubuntu server来玩一玩。</p>
<p><a href="https://i.loli.net/2021/03/23/SeTosCvz8UZM4Y1.png" class="gallery-item"><img src="https://i.loli.net/2021/03/23/SeTosCvz8UZM4Y1.png"></a></p>
<p>由于SATA和USB3.0都直通给了黑群晖，没有了安装其他系统的空间。在兼顾性能和稳定性上考虑，采用iSCSI的方式从群晖里共享一块50GB的虚拟磁盘给到ESXi作为ubuntu server的安装空间。<span id="more"></span></p>
<h2 id="服务器端iSCSI配置"><a href="#服务器端iSCSI配置" class="headerlink" title="服务器端iSCSI配置"></a>服务器端iSCSI配置</h2><p>在群晖的iSCSI Manager里创建iSCSI LUN。空间分配采用的Thin Provisioning，并启用快照，给虚拟机增加一道保险。</p>
<p><a href="https://i.loli.net/2021/03/23/OWU39sYnNDFtGlA.png" class="gallery-item"><img src="https://i.loli.net/2021/03/23/OWU39sYnNDFtGlA.png"></a></p>
<p>创建后新增一个映射，记下IQN。由于是局域网内的应用，暂时没有启用CHAP，也就是没有密码验证。</p>
<p><a href="https://i.loli.net/2021/03/23/g9ZwbehpcBCDzoT.png" class="gallery-item"><img src="https://i.loli.net/2021/03/23/g9ZwbehpcBCDzoT.png"></a></p>
<h2 id="客户端iSCSI配置"><a href="#客户端iSCSI配置" class="headerlink" title="客户端iSCSI配置"></a>客户端iSCSI配置</h2><p>ESXi在存储里选择适配器页面，选中vmhba64,配置ISCSI，用以上获取的IQN添加一个静态目标，并填写群晖的IP地址。</p>
<p><a href="https://i.loli.net/2021/03/23/jB2oHOSQq764xIe.png" class="gallery-item"><img src="https://i.loli.net/2021/03/23/jB2oHOSQq764xIe.png"></a></p>
<p>刷新后发现iSCSI已经连接上了，但是状态显示“正常，已降级”。虽然能正常使用，但是强迫症不能忍。打开ESXi的SSH，登录后运行以下4条命令。</p>
<p><a href="https://i.loli.net/2021/03/23/2UBsNgACMbz4Eaj.png" class="gallery-item"><img src="https://i.loli.net/2021/03/23/2UBsNgACMbz4Eaj.png"></a></p>
<pre><code class="[bash]">esxcli storage nmp satp rule add -s VMW_SATP_LOCAL --device naa.6001405167c70f1d1521d42ead8edfd3 --option=enable_local
esxcli storage core claiming reclaim -d naa.6001405167c70f1d1521d42ead8edfd3
esxcli storage core claimrule load
esxcli storage core claimrule run</code></pre>
<p>再次刷新后可见状态已经正常了。</p>
<p><a href="https://i.loli.net/2021/03/23/toOagAD6CuGexc7.png" class="gallery-item"><img src="https://i.loli.net/2021/03/23/toOagAD6CuGexc7.png"></a></p>
<p>之后新建数据存储，在这存储上新建虚拟机，运行成功！</p>
<p><a href="https://i.loli.net/2021/03/23/ARDbKmLcnWj5pz6.png" class="gallery-item"><img src="https://i.loli.net/2021/03/23/ARDbKmLcnWj5pz6.png"></a></p>
</div><script src="/js/lightgallery.min.js"></script><script src="/js/lg-thumbnail.js"></script><script src="/js/lg-zoom.js"></script><script src="/js/lg-autoplay.js"></script><script src="/js/lg-fullscreen.js"></script><script src="/js/lg-pager.js"></script><script src="/js/lg-hash.js"></script><script src="/js/lg-video.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <tags>
        <tag>HPE</tag>
        <tag>Micro server Gen 8</tag>
        <tag>ESXi</tag>
        <tag>iSCSI</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu Server@RaspberryPi中Docker的macvlan</title>
    <url>/2021/02/22/Ubuntu-Server-RaspberryPi%E4%B8%ADDocker%E7%9A%84macvlan/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/lightgallery.min.css" /><div class=".article-gallery"<h1 id="Ubuntu-Server-Raspberry-Pi中Docker的macvlan"><a href="#Ubuntu-Server-Raspberry-Pi中Docker的macvlan" class="headerlink" title="Ubuntu Server@Raspberry Pi中Docker的macvlan"></a>Ubuntu Server@Raspberry Pi中Docker的macvlan</h1><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>docker在创建应用时，必须指定端口的映射。当应用较多时，往往遇到默认的端口相互冲突的情况。配置不冲突的端口往往很麻烦。借助macvlan，可以将每个应用单独分配一个ip，且不需要设置端口映射。可以说是相当方便了。</p>
<h2 id="2-打开网卡混杂模式"><a href="#2-打开网卡混杂模式" class="headerlink" title="2.打开网卡混杂模式"></a>2.打开网卡混杂模式</h2><pre><code class="[bash]">sudo ip link set eth0 promisc on</code></pre>
<span id="more"></span>
<h2 id="3-创建Docker-macvlan网络"><a href="#3-创建Docker-macvlan网络" class="headerlink" title="3. 创建Docker macvlan网络"></a>3. 创建Docker macvlan网络</h2><pre><code class="[bash]">sudo docker network create -d macvlan --subnet=192.168.2.0/24 --gateway=192.168.2.65 -o parent=eth0 macvlan_net</code></pre>
<h2 id="4-调整已有container的网络"><a href="#4-调整已有container的网络" class="headerlink" title="4.调整已有container的网络"></a>4.调整已有container的网络</h2><p>登录portainer修改network为刚刚创建的macvlan_net，手动设置一个不冲突的ip，或者留空用DHCP自动获取。</p>
<p><a href="https://i.loli.net/2021/02/22/C4OoJImEwiP7ctU.png" class="gallery-item"><img src="https://i.loli.net/2021/02/22/C4OoJImEwiP7ctU.png"></a></p>
<h2 id="5-新建的container指定网络"><a href="#5-新建的container指定网络" class="headerlink" title="5.新建的container指定网络"></a>5.新建的container指定网络</h2><pre><code class="[bash]">sudo docker run --network macvlan_net *** #***为其他必要信息</code></pre>
</div><script src="/js/lightgallery.min.js"></script><script src="/js/lg-thumbnail.js"></script><script src="/js/lg-zoom.js"></script><script src="/js/lg-autoplay.js"></script><script src="/js/lg-fullscreen.js"></script><script src="/js/lg-pager.js"></script><script src="/js/lg-hash.js"></script><script src="/js/lg-video.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>raspberry pi</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu Server on Raspberry Pi 4</title>
    <url>/2021/01/30/Ubuntu%20Server%20on%20Raspberry%20Pi%204/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/lightgallery.min.css" /><div class=".article-gallery"<h1 id="Ubuntu-Server-on-Raspberry-Pi-4"><a href="#Ubuntu-Server-on-Raspberry-Pi-4" class="headerlink" title="Ubuntu Server on Raspberry Pi 4"></a>Ubuntu Server on Raspberry Pi 4</h1><h2 id="1-镜像烧录"><a href="#1-镜像烧录" class="headerlink" title="1. 镜像烧录"></a>1. 镜像烧录</h2><p>访问 <a href="https://www.raspberrypi.org/software/">https://www.raspberrypi.org/software/</a> 下载对应平台的Raspberry Pi Imager</p>
<p>安装并打开Raspberry Pi Imager，选择对应的操作系统。这里我选择ubuntu 20.10 64位，因为目前docker已经放弃对32位系统的支持。</p>
<p><a href="https://i.loli.net/2021/01/30/1vGnK5iVrF8IPMJ.png" class="gallery-item"><img src="https://i.loli.net/2021/01/30/1vGnK5iVrF8IPMJ.png"></a></p>
<ol>
<li>Choose OS； 2. Other general purpose OS； 3.ubuntu； 4. ubuntu server 20.10 (RPi3/4/400);  5. Choose SD Card; 6. WRITE<span id="more"></span>

</li>
</ol>
<h2 id="2-开机配置"><a href="#2-开机配置" class="headerlink" title="2. 开机配置"></a>2. 开机配置</h2><p>烧录完成后取下U盘，插入Raspberry Pi 4并启动，稍等片刻后执行</p>
<pre><code class="[bash]">$ ssh ubuntu@192.168.2.246  #192.168.2.246是我树莓派的地址，可在路由器管理界面获取。默认登录密码ubuntu</code></pre>
<p>登录后自动提示修改密码，首先输入原始密码<code>ubuntu</code>,之后两次输入新密码即可。此时<code>ssh</code>会自动退出，用新密码登录后再依次执行：</p>
<pre><code class="[bash]">$ sudo apt update
$ sudo apt upgrade</code></pre>
<p>更新系统后，基本配置完成。</p>
<h2 id="3-挂载外部磁盘"><a href="#3-挂载外部磁盘" class="headerlink" title="3. 挂载外部磁盘"></a>3. 挂载外部磁盘</h2><p>目前有两个硬盘需挂载到系统的<code>/mnt</code>目录，</p>
<pre><code class="[bash]">$ sudo fdisk -l #查看分区
$ sudo mkdir /mnt/sda #创建挂载点1
$ sudo mkdir /mnt/sdb #创建挂载点2
$ sudo mount /dev/sda1 /mnt/sda #挂载磁盘
$ sudo mount /dev/sdb1 /mnt/sdb #挂载磁盘
$ sudo blkid /dev/sda1 #查询磁盘1信息
$ sudo blkid /dev/sdb1 #查询磁盘2信息
$ sudo nano /etc/fstab #修改自动挂载</code></pre>
<p>在<code>/etc/fstab</code>最后加入以下内容，其中的UUID为上述<code>blkid</code>命令查询结果。</p>
<pre><code class="[bash]">UUID=******************** /mnt/sda ext4 defaults  0  2
UUID=******************** /mnt/sdb ext4 defaults  0  2</code></pre>
<p>运行<code>df -h</code>查看挂载后的磁盘信息，确认无误。</p>
<pre><code class="[bash]">Filesystem      Size  Used Avail Use% Mounted on
/dev/sdc2        28G  2.6G   25G  10% /
/dev/sdc1       253M  152M  101M  61% /boot/firmware
/dev/sda1       3.6T  1.4T  2.2T  39% /mnt/sda
/dev/sdb1       458G   77M  458G   1% /mnt/sdb</code></pre>
<h2 id="4-ZSH配置"><a href="#4-ZSH配置" class="headerlink" title="4. ZSH配置"></a>4. ZSH配置</h2><p>安装<code>ZSH</code>和<code>oh-my-zsh</code>，并使用<code>startship</code>和<code>zplugin</code>：</p>
<pre><code class="[bash]"># install zsh on Ubuntu
$ sudo apt install zsh
# change current shell to zsh
$ chsh -s $(which zsh)
# install oh-my-zsh
$ sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;
# Install starship
$ curl -fsSL https://starship.rs/install.sh | bash
# Install zplugin
$ sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/zdharma/zplugin/master/doc/install.sh)&quot;</code></pre>
<p>修改<code>zsh</code>配置文件：<code>$ sudo nano ~/.zshrc</code>在文件最后加入：</p>
<pre><code class="[bash]"># ~/.zshrc

#加载startship
eval &quot;$(starship init zsh)&quot;

# 加载插件sudo, git, zsh-autosuggestions，fast-syntax-highlighting
# plugins from OMZ
zplugin snippet OMZ::plugins/sudo/sudo.plugin.zsh
zplugin snippet OMZ::lib/git.zsh
zplugin ice lucid wait=&quot;0&quot; atload=&quot;zpcompinit; zpcdreplay&quot;
zplugin snippet OMZ::plugins/git/git.plugin.zsh

# plugins from github repo
zplugin ice lucid wait=&#39;0&#39; atload=&#39;_zsh_autosuggest_start&#39;
zplugin light zsh-users/zsh-autosuggestions
zplugin light zdharma/fast-syntax-highlighting</code></pre>
<p>创建<code>startship</code>配置文件: <code>$ mkdir -p ~/.config &amp;&amp; touch ~/.config/starship.toml</code>，修改配置：<code>$ sudo nano ~/.config/starship.toml</code>在文件写入：</p>
<pre><code class="[toml]"># Don&#39;t print a new line at the start of the prompt
add_newline = true

# Replace the &quot;❯&quot; symbol in the prompt with &quot;➜&quot;
[character]                            # The name of the module we are configuring is &quot;character&quot;
success_symbol = &quot;[&gt;&gt;](bold red)&quot;     # The &quot;success_symbol&quot; segment is being set to &quot;➜&quot; with the color &quot;bold green&quot;

# Disable the package module, hiding it from the prompt completely
[package]
disabled = true

[username]
disabled = false
show_always = true

[time]
disabled = false
format = &#39;⚡[\[$time\]]($style) &#39;
time_format = &quot;%R&quot;
style = &quot;bold yellow&quot;
utc_time_offset = &quot;+8&quot;</code></pre>
<p>配置好后重新连接ssh，脚本会自动下载各种插件并完成配置：<br><a href="https://i.loli.net/2021/01/30/hwXxJMFbikI8Qn6.png" class="gallery-item"><img src="https://i.loli.net/2021/01/30/hwXxJMFbikI8Qn6.png"  /></a></p>
<h2 id="5-常用工具安装"><a href="#5-常用工具安装" class="headerlink" title="5. 常用工具安装"></a>5. 常用工具安装</h2><ul>
<li><p><code>exa</code>代替<code>ls</code></p>
<pre><code class="[bash]">$ sudo apt install exa</code></pre>
<p><a href="https://i.loli.net/2021/01/30/r7gO3EweY8RLkoz.png" class="gallery-item"><img src="https://i.loli.net/2021/01/30/r7gO3EweY8RLkoz.png"></a></p>
</li>
<li><p><code>bat</code>替代<code>cat</code></p>
<pre><code class="[bash]">$ wget https://github.com/sharkdp/bat/releases/download/v0.17.1/bat_0.17.1_arm64.deb
$ sudo dpkg -i bat_0.17.1_arm64.deb</code></pre>
<p><a href="https://i.loli.net/2021/01/30/7tyU8GkV3A6cZMW.png" class="gallery-item"><img src="https://i.loli.net/2021/01/30/7tyU8GkV3A6cZMW.png"></a></p>
</li>
</ul>
<h2 id="6-NFS共享配置"><a href="#6-NFS共享配置" class="headerlink" title="6. NFS共享配置"></a>6. NFS共享配置</h2><p>由于需要将<code>/mnt/sda/Mac/media</code>目录用NFS共享到FreeNas的Plex服务器中，首先安装<code>nfs-kernel-server</code>，然后设置共享。</p>
<pre><code class="[bash]">$ sudo apt install nfs-kernel-server #安装服务器
$ sudo nano /etc/exports #添加下面的内容后再执行下一条
$ sudo /etc/init.d/nfs-kernel-server restart #重启服务</code></pre>
<p>在exports中添加如下内容;</p>
<pre><code class="[bash]">/mnt/sda/Mac/media  192.168.2.161(rw,sync,no_root_squash,no_subtree_check) #192.168.2.161是freenas的地址</code></pre>
<p>在freeNAS端运行：</p>
<pre><code class="[bash]">$ mount_nfs 192.168.2.246:/mnt/sda/Mac/media /media
$ ls /media #查看是否完成连接</code></pre>
<h2 id="7-SMB共享配置"><a href="#7-SMB共享配置" class="headerlink" title="7. SMB共享配置"></a>7. SMB共享配置</h2><p>以下步骤将挂载的两块硬盘用smb共享出来。</p>
<pre><code class="[bash]">$ sudo apt-get install samba samba-common
$ sudo chmod 777 /mnt/sda
$ sudo chmod 777 /mnt/sdb
$ sudo smbpasswd -a ubuntu
$ sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak
$ sudo nano /etc/samba/smb.conf</code></pre>
<p>在<code>smb.conf</code>中添加：</p>
<pre><code class="[bash]">[share Media]
comment = share folder
browseable = yes
path = /mnt/sda
create mask = 0700
directory mask = 0700
valid users = ubuntu
force user = ubuntu
force group = ubuntu
public = yes
available = yes
writable = yes

[share data]
comment = share folder
browseable = yes
path = /mnt/sdb
create mask = 0700
directory mask = 0700
valid users = ubuntu
force user = ubuntu
force group = ubuntu
public = yes
available = yes
writable = yes</code></pre>
<p>同时可注释掉默认共享的打印机：</p>
<pre><code class="[bash]">#[printers]
#   comment = All Printers
#   browseable = no
#   path = /var/spool/samba
#   printable = yes
#   guest ok = no
#   read only = yes
#   create mask = 0700

# Windows clients look for this share name as a source of downloadable
# printer drivers
#[print$]
#   comment = Printer Drivers
#   path = /var/lib/samba/printers
#   browseable = yes
#   read only = yes
#   guest ok = no
</code></pre>
<p>完成设置后重启SMB服务：</p>
<pre><code class="[bash]">$ sudo service smbd restart</code></pre>
<h2 id="8-安装Docker"><a href="#8-安装Docker" class="headerlink" title="8. 安装Docker"></a>8. 安装Docker</h2><p>依据官方文档<a href="https://docs.docker.com/engine/install/ubuntu/">https://docs.docker.com/engine/install/ubuntu/</a></p>
<pre><code class="[bash]">$ sudo apt-get remove docker docker-engine docker.io containerd runc #卸载旧版
$ sudo apt-get update 

$ sudo apt-get install \      #安装必要的组件
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common

$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - #添加密钥
$ sudo apt-key fingerprint 0EBFCD88  #验证指纹

$ sudo add-apt-repository \    #添加repository
   &quot;deb [arch=arm64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&quot;

$ sudo apt-get update
$ sudo apt-get install docker-ce docker-ce-cli containerd.io #安装docker
</code></pre>
<h2 id="9-安装Portainer-IO管理docker"><a href="#9-安装Portainer-IO管理docker" class="headerlink" title="9. 安装Portainer IO管理docker"></a>9. 安装Portainer IO管理docker</h2><p>依据官方文档<a href="https://documentation.portainer.io/v2.0/deploy/linux/">https://documentation.portainer.io/v2.0/deploy/linux/</a></p>
<pre><code class="[bash]">$ sudo docker volume create portainer_data
$ sudo docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest</code></pre>
<p>访问<a href="http://192.168.2.246:9000/">http://192.168.2.246:9000</a>，创建管理密码，登录后添加Endpoints：</p>
<p><a href="https://i.loli.net/2021/01/30/mfwY1W2xDNsi3GR.png" class="gallery-item"><img src="https://i.loli.net/2021/01/30/mfwY1W2xDNsi3GR.png"></a></p>
</div><script src="/js/lightgallery.min.js"></script><script src="/js/lg-thumbnail.js"></script><script src="/js/lg-zoom.js"></script><script src="/js/lg-autoplay.js"></script><script src="/js/lg-fullscreen.js"></script><script src="/js/lg-pager.js"></script><script src="/js/lg-hash.js"></script><script src="/js/lg-video.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>raspberry pi</tag>
        <tag>zsh</tag>
      </tags>
  </entry>
  <entry>
    <title>Gitalk的神奇redirect_uri_mismatch故障与修复</title>
    <url>/2021/01/15/Gitalk%E7%9A%84%E7%A5%9E%E5%A5%87redirect_uri_mismatch%E6%95%85%E9%9A%9C%E4%B8%8E%E4%BF%AE%E5%A4%8D/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/lightgallery.min.css" /><div class=".article-gallery"<p>事情的经过是这样的：</p>
<p>上一篇博文原始名叫《2021年了，Ubuntu Touch还能玩吗（前篇）》，<strong>可以看到中间包含了中文标点符号“，”和“（）”</strong>，hexo中一切顺利，没有任何错误。于是<code>hexo d -g</code>发布了，过了一段时间发现Gitalk还没初始化，于是我点了一下，神奇的事情发生了，博客瞬间回到了首页，评论也没顺利初始化。</p>
<center><a href="https://img.imgdb.cn/item/60015a0e3ffa7d37b349fcea.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/60015a0e3ffa7d37b349fcea.jpg" style="zoom:60%;" ></a></center><span id="more"></span>
再仔细看发现域名后有一串字符:

<pre><code>https://igeek.cloud/?error=redirect_uri_mismatch&amp;error_description=The+redirect_uri+MUST+match+the+registered+callback+URL+for+this+application.&amp;error_uri=https%3A%2F%2Fdocs.github.com%2Fapps%2Fmanaging-oauth-apps%2Ftroubleshooting-authorization-request-errors%2F%23redirect-uri-mismatch
</code></pre>
<p>于是上<a href="https://github.com/gitalk/gitalk/">https://github.com/gitalk/gitalk/</a> 看issue，有一条就有这个这个回调的URL错误。然后想到了昨晚将博客的域名从github的改成了自己的域名，于是：</p>
<ol>
<li>登录<a href="https://github.com/settings/applications">https://github.com/settings/applications</a> 修改了callback URL,蛋疼的是，故障依旧。</li>
</ol>
<center><a href="https://img.imgdb.cn/item/60015cd83ffa7d37b34b8408.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/60015cd83ffa7d37b34b8408.jpg" style="zoom:60%;" /></a></center>

<ol start="2">
<li><p>删除原来的AUTH App，重新建了一个，调整了主题的_config.yml中的clientID和clientSecret，hexo重新部署到github，故障依旧。</p>
</li>
<li><p>运行<code>hexo s</code>在本地验证，还是错误。</p>
</li>
<li><p>将博文的名称改掉中间的中文标点，《2021年了，Ubuntu Touch还能玩吗（前篇）》改为<a href="http://topurl.cn/4vh">《2021年Ubuntu Touch还能玩吗_前篇》</a>，故障依旧。</p>
</li>
</ol>
<p>就在百思不得其解的时候，突然看到了Authorized OAuth Apps中并没有出现我们刚刚重建的app，感觉事情应该有了转机。于是到vs code里又新建了一篇博文，名称test，内容随便脸滚键盘。发布后到评论区激活Gitalk。神奇的事情发生了，页面跳转到了github登录界面，于是输入密码登录后Gitalk成功开启，刚刚始终不能打开的<a href="http://topurl.cn/4vh">2021年Ubuntu Touch还能玩吗_前篇</a>顺利开启评论!</p>
<p>经过一大圈折腾和好几个小时的疑惑，现在总结一下：</p>
<ol>
<li>修改自定义域名后，及时登录<a href="https://github.com/settings/applications">https://github.com/settings/applications</a> 修改callback URL。</li>
<li>hexo博文不要使用中文标点。</li>
<li>留意细节，细节是魔鬼啊。</li>
</ol>
</div><script src="/js/lightgallery.min.js"></script><script src="/js/lg-thumbnail.js"></script><script src="/js/lg-zoom.js"></script><script src="/js/lg-autoplay.js"></script><script src="/js/lg-fullscreen.js"></script><script src="/js/lg-pager.js"></script><script src="/js/lg-hash.js"></script><script src="/js/lg-video.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>gitalk</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年Ubuntu Touch还能玩吗_前篇</title>
    <url>/2021/01/15/2021%E5%B9%B4Ubuntu%20Touch%E8%BF%98%E8%83%BD%E7%8E%A9%E5%90%97_%E5%89%8D%E7%AF%87/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/lightgallery.min.css" /><div class=".article-gallery"<center><a href="https://img.imgdb.cn/item/600112173ffa7d37b3203c1a.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/600112173ffa7d37b3203c1a.jpg" style="zoom:40%;" /></a></center>

<h2 id="1-背景介绍"><a href="#1-背景介绍" class="headerlink" title="1. 背景介绍"></a>1. 背景介绍</h2><blockquote>
<p>Ubuntu Touch（又称Ubuntu Phone）是Ubuntu操作系统的移动版本，由UBports社区开发，它的用户界面是用Qt编写的，主要是为智能手机和平板电脑等触屏移动设备设计的，但最初的融合目标是想把Ubuntu Touch带到笔记本电脑、台式机、物联网设备、电视和智能手表上，实现完整统一的用户体验。<span id="more"></span>该项目由Canonical Ltd.发起，但Mark Shuttleworth于2017年4月5日宣布Canonical将因缺乏市场兴趣而终止支持，随后被UBports采纳为社区项目，UBports项目由Marius Gripsgard于2015年发起，源码被转移到UBports基金会，现居于此。UBports的使命是支持Ubuntu Touch的合作开发，并促进其广泛使用。</p>
</blockquote>
<p align="right">---Wikipedia</p>

<p>从2015年知道这个项目开始，就对ubuntu touch充满了兴趣，但是当时的工作较忙，一直没能体验一番。经过了这么多年的时间，在2021年的一个偶然间，发现ubuntu touch仍然在更新。突然间被UBports的坚持所打动。于是翻阅了支持<a href="https://devices.ubuntu-touch.io/">ubuntu touch 的设备</a>，发现在抽屉吃灰很久的Nexus 5居然在支持列表，感动啊o(￣▽￣)ｄ </p>
<p><em>真相是：看到了B站大佬稚晖君的Quark-N小可爱，可惜自己没有能力动手做一个，于是想看旧手机能否改造一个小型的linux服务器。。。。。。</em></p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://img.imgdb.cn/item/600114b33ffa7d37b322b6d9.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/600114b33ffa7d37b322b6d9.jpg"></a></td>
<td><a href="https://img.imgdb.cn/item/6001159c3ffa7d37b3233984.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/6001159c3ffa7d37b3233984.jpg"></a></td>
</tr>
</tbody></table>
<center>谁不想要一个小可爱呢</center>

<h2 id="2-刷机"><a href="#2-刷机" class="headerlink" title="2. 刷机"></a>2. 刷机</h2><p>首先确定自己的手机在ubuntu touch的支持范围，本来想着用pixle一代来搞的，但是很可惜，不在支持列表。只能换更老旧的nexus 5。再贴一次支持列表：<a href="https://devices.ubuntu-touch.io/">ubuntu touch 的设备</a> 。刷机前请确保已经解锁Bootloader，由于我的nexus 5早就已经解锁，所以略过。不过话说回来，当年的很多刷机的资源现在也很难找到了，2021年再解锁和刷机确实很麻烦呐。</p>
<center><a href="https://img.imgdb.cn/item/600120093ffa7d37b329048a.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/600120093ffa7d37b329048a.jpg" style="zoom:60%;" ></a></center>

<ol>
<li><p><strong>插电，开机</strong> 首先进入bootloader，由于是旧手机，里面的东西也无需备份了。。。连上USB线，在电脑上装上驱动。这年头win10已经大量装机了，安装驱动直接在windows update里就行。安装方法是：设置–更新和安全–查看可选更新–驱动程序更新找到LeMobile Android Device安装即可。</p>
</li>
<li><p>下载<a href="https://ubuntu-touch.io/zh_CN/get-ubuntu-touch">UBports安装程序</a> , 三个平台都支持，UBports真是很给力呢。</p>
<center><a href="https://img.imgdb.cn/item/600123883ffa7d37b32a89f4.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/600123883ffa7d37b32a89f4.jpg" style="zoom:40%;" ></a></center>
</li>
<li><p>根据提示操作即可，开始会提示安装Universal ADB driver，直接点击下载安装即可。如果遇到系统镜像一直下载失败，那么你懂的┑(￣Д ￣)┍。安装过程会让选择安装的版本，直接选择最新的16.04devel即可，ubuntu touch是每日更新，每天都有新的OTA可以升级，目前版本已经累计到了1800+了，简直就是OTA党的快乐机啊。。。</p>
</li>
</ol>
<table>
<thead>
<tr>
<th>刷机</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://img.imgdb.cn/item/600127643ffa7d37b32c1085.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/600127643ffa7d37b32c1085.jpg"></a></td>
<td><a href="https://img.imgdb.cn/item/600125cf3ffa7d37b32b7531.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/600125cf3ffa7d37b32b7531.jpg"></a></td>
<td><a href="https://img.imgdb.cn/item/600125ec3ffa7d37b32b7e71.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/600125ec3ffa7d37b32b7e71.jpg"></a></td>
</tr>
<tr>
<td><a href="https://img.imgdb.cn/item/600126253ffa7d37b32b91e4.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/600126253ffa7d37b32b91e4.jpg"></a></td>
<td><a href="https://img.imgdb.cn/item/600126463ffa7d37b32ba187.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/600126463ffa7d37b32ba187.jpg"></a></td>
<td><a href="https://img.imgdb.cn/item/600127353ffa7d37b32c02d7.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/600127353ffa7d37b32c02d7.jpg"></a></td>
</tr>
</tbody></table>
<ol start="4">
<li>安装过程中会重新刷写新的bootloader和recover，开机就有<del>炫酷的</del>ubuntu logo。一杯咖啡的时间后， 系统便刷写完成，开机尝鲜。</li>
</ol>
<table>
<thead>
<tr>
<th>系统</th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://img.imgdb.cn/item/60012b5e3ffa7d37b32e01c6.png" class="gallery-item"><img src="https://img.imgdb.cn/item/60012b5e3ffa7d37b32e01c6.png"></a></td>
<td><a href="https://img.imgdb.cn/item/60012b5e3ffa7d37b32e01ca.png" class="gallery-item"><img src="https://img.imgdb.cn/item/60012b5e3ffa7d37b32e01ca.png"></a></td>
<td><a href="https://img.imgdb.cn/item/60012b5e3ffa7d37b32e01ce.png" class="gallery-item"><img src="https://img.imgdb.cn/item/60012b5e3ffa7d37b32e01ce.png"></a></td>
<td><a href="https://img.imgdb.cn/item/60012b5e3ffa7d37b32e01d8.png" class="gallery-item"><img src="https://img.imgdb.cn/item/60012b5e3ffa7d37b32e01d8.png"></a></td>
</tr>
</tbody></table>
<p>未完待续。</p>
</div><script src="/js/lightgallery.min.js"></script><script src="/js/lg-thumbnail.js"></script><script src="/js/lg-zoom.js"></script><script src="/js/lg-autoplay.js"></script><script src="/js/lg-fullscreen.js"></script><script src="/js/lg-pager.js"></script><script src="/js/lg-hash.js"></script><script src="/js/lg-video.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <tags>
        <tag>ubuntu touch</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>显微摄影 1(虫恐警告)</title>
    <url>/2021/01/13/%E6%98%BE%E5%BE%AE%E6%91%84%E5%BD%B11/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/lightgallery.min.css" /><div class=".article-gallery"<h1 id="显微摄影1"><a href="#显微摄影1" class="headerlink" title="显微摄影1"></a>显微摄影1</h1><h2 id="A-标本的选择"><a href="#A-标本的选择" class="headerlink" title="A.标本的选择"></a>A.标本的选择</h2><p><a href="https://img.imgdb.cn/item/5ffec7863ffa7d37b3ead6c0.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/5ffec7863ffa7d37b3ead6c0.jpg"></a><br><strong>本系列标本来源均为合法的标本经营网店，商家网店首页明确标明商家拥有的相应经营许可证和资质。请勿非法采集野生动植物标本！部分昆虫已列入国家一级、二级保护动物，请避免相关法律风险！</strong><span id="more"></span></p>
<ol>
<li>首选颜色鲜艳，虫体结构完整的昆虫。由于显微镜头下的视野范围有限，太大的昆虫需要拍摄的图片张数过多，工作量太大。如果虫体太小，采用5X或10X的显微镜物镜虽然能够看清，但是没有办法达到10亿像素的指标。目前根据经验，选择各种甲虫来拍摄时最优的。虎甲目、叶甲目、象甲目和吉丁科都能够达到我们的拍摄要求。各种蝴蝶等鳞翅目昆虫由于体型较大，虽然能够在镜头下呈现出惊人的效果，但是难度和甲虫不是一个等级，暂不作为拍摄对象。</li>
<li>虫体便于清洁。由于我们采用高放大倍率的镜头拍摄，虫体上细微的灰尘、污渍、保存不当产生的霉菌等都在镜头下清晰可见。可以在放大镜的帮助下采用软毛刷和气吹来清洁。</li>
<li>适当整姿。直接买来的简装昆虫从包装中拆出后难免有虫肢、触角位置相互重叠或者姿势不正确。为了便于观察和避免拍摄时产生的影晕，在不破坏虫体正常姿势的前提下科学整姿。</li>
</ol>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://i.loli.net/2020/02/05/4v5BNm7jVuEp2Rc.jpg" title="端红绿吉丁虫.jpg" class="gallery-item"><img src="https://i.loli.net/2020/02/05/4v5BNm7jVuEp2Rc.jpg" alt="端红绿吉丁虫.jpg"></a></td>
<td><a href="https://i.loli.net/2020/02/05/gIzBcPWQf8nZdRG.jpg" title="金斑虎甲.jpg" class="gallery-item"><img src="https://i.loli.net/2020/02/05/gIzBcPWQf8nZdRG.jpg" alt="金斑虎甲.jpg"></a></td>
<td><a href="https://i.loli.net/2020/02/05/xrS8o4JBYRpkZjs.jpg" title="象甲.jpg" class="gallery-item"><img src="https://i.loli.net/2020/02/05/xrS8o4JBYRpkZjs.jpg" alt="象甲.jpg"></a></td>
</tr>
</tbody></table>
<p>注：以上图片均为缩小后上传。原图暂不公开分享。</p>
<h2 id="B-镜头的配置"><a href="#B-镜头的配置" class="headerlink" title="B.镜头的配置"></a>B.镜头的配置</h2><ol>
<li><strong>显微镜物镜</strong>，采用无限远系统。所谓的无限远物镜区别于有限远物镜，请看物镜镜筒外标注，无限远系统有“∞”字样。而有限远的物镜，一般标注有160字样，意思为从物镜后到cmos传感器间，需要160mm长的镜管。同样是显微镜物镜，由于成像原理的区别，需要配置的镜管也不同。有限远系统仅需要中空的延长筒就可以。而无限远系统需要有折射镜片的镜筒，一般为200mm焦距的长焦镜头。限于经费有限，目前能够买得起的，也是公认效果最好的是<a href="https://www.closeuphotography.com/mitutoyo-10x-m-plan-apo">三丰 M Plan APO 10X / 0.28</a>。这只物镜来自于某咸鱼卖家，是不是成功捡漏还不太确定，价格也确实不便宜。除此之外还有不知名的无限远平场生物显微镜4只，分别是5X、10X、20X和40X。这四只是刚开始啥也不懂的时候买的，结果只有5X的能够派上用场，其他高倍的物镜，由于工作距离实在是太短，在拍摄过程中相当受限，几乎无法使用。以后再进行物镜购买时，一定要查到WD参数即working distance工作距离的值。个人感觉，一般在20mm以上才能便于布光和拍摄。上面提到的三丰10x APO的物镜，WD=34mm，有足够的工作间距进行布光。<br><a href="https://i.loli.net/2020/02/05/aEKo7cb4RU8yqSm.png" title="三丰10x.png" class="gallery-item"><img src="https://i.loli.net/2020/02/05/aEKo7cb4RU8yqSm.png" alt="三丰10x.png"></a><br><a href="https://i.loli.net/2020/02/05/hz9T86FvegYWZw4.jpg" title="物镜1.jpg" class="gallery-item"><img src="https://i.loli.net/2020/02/05/hz9T86FvegYWZw4.jpg" alt="物镜1.jpg"></a></li>
</ol>
<p><em>买到的物镜，最右边是三丰的10X，可以看到体积上的巨大差距。</em></p>
<ol start="2">
<li><strong>物镜转接</strong>一般的物镜螺纹是RMS标准，而三丰等高端物镜则有自己的标准，采购转接环的时候一定要选对螺纹标准，不然无法转接。如果已经有RMS螺纹的转接环，要想接三丰的26mm接口螺纹，可以购买一个26mm转接RMS的环，通过转接来实现RMS标准的兼容。</li>
<li><strong>200mm镜筒</strong>是用作无限远物镜的镜管，一般采用200mm的定焦镜头，如果有现成的长焦镜头可以直接选用。如果没有，建议可以采购太苦玛200mm/F4，或者奥林巴斯OM 200mm/F4这类的老定焦镜头，这类镜头一般足够便宜，而且全金属镜身，在转接高端物镜时足够牢固，不会变形。当然，如果有长焦变焦镜头也可以，还能充分利用高端显微镜的大口径。比如三丰的10X物镜，在变焦镜头上可以实现5X的放大并覆盖APS-C的传感器。而且能够在5X~10X之间灵活变化，可谓是一镜多用。</li>
<li><strong>镜头转接环</strong>根据自己的相机和200mm镜头来采购，本人的系统用了奥林巴斯OM的镜头来做镜管，拍摄的相机为索尼a6300。所以我的转接环是OM-Nex，也就是奥巴OM转接索尼的E卡口。</li>
</ol>
<p><strong>未完待续。。。。。。</strong></p>
<h2 id="H-参考资料"><a href="#H-参考资料" class="headerlink" title="H.参考资料"></a>H.参考资料</h2><ol>
<li>三丰物镜目录  <a href="https://www.mitutoyo.co.jp/eng/support/service/catalog/04/E14020.pdf">https://www.mitutoyo.co.jp/eng/support/service/catalog/04/E14020.pdf</a></li>
<li>closeuphotography.com关于三丰物镜的测试   <a href="https://www.closeuphotography.com/mitutoyo-10x-m-plan-apo">https://www.closeuphotography.com/mitutoyo-10x-m-plan-apo</a></li>
<li>WeMarco叠叠乐[<a href="http://www.wemacro.com/cn/">http://www.wemacro.com/cn/</a>]</li>
</ol>
</div><script src="/js/lightgallery.min.js"></script><script src="/js/lg-thumbnail.js"></script><script src="/js/lg-zoom.js"></script><script src="/js/lg-autoplay.js"></script><script src="/js/lg-fullscreen.js"></script><script src="/js/lg-pager.js"></script><script src="/js/lg-hash.js"></script><script src="/js/lg-video.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <tags>
        <tag>gallery</tag>
        <tag>显微摄影</tag>
        <tag>Wemacro</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo中highlight.js代码高亮的修改方法</title>
    <url>/2021/01/13/hexo%E4%B8%ADhighlight-js%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E7%9A%84%E4%BF%AE%E6%94%B9%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/lightgallery.min.css" /><div class=".article-gallery"<p>Ayer主题自带的代码高亮一直没能激活成功，研究了好久，琢磨出一个可行的方案：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://img.imgdb.cn/item/5ffe6bd13ffa7d37b39cbda5.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/5ffe6bd13ffa7d37b39cbda5.jpg"/></a></td>
<td><a href="https://img.imgdb.cn/item/5ffe6c863ffa7d37b39d33ce.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/5ffe6c863ffa7d37b39d33ce.jpg"/></a></td>
</tr>
</tbody></table>
<p>效果预览</p>
<h2 id="1-修改hexo的配置文件-config-yml"><a href="#1-修改hexo的配置文件-config-yml" class="headerlink" title="1. 修改hexo的配置文件_config.yml"></a>1. 修改hexo的配置文件_config.yml</h2><p>注意不要修改主题的配置文件，注释掉多余的项，将hexo内建的highlight功能和prismjs关闭避免干扰。我们将在主题的其他位置添加<code>highlight.js</code>功能。hexo内建的highlight是在运行<code>hexo g</code>或者<code>hexo s</code>时渲染高亮，而我们的目的是将渲染交给浏览器来进行。<span id="more"></span></p>
<pre><code class="[yml][_config.yml]"> highlight:
     enable: false
 #   line_number: true
 #   auto_detect: true
 #   tab_replace: &#39;&#39;
 #   wrap: true
 #   hljs: true
 prismjs:
     enable: false
 #   preprocess: false
 #   line_number: false
 #   tab_replace: &#39;&#39;</code></pre>
<h2 id="2-在主题内插入css和js文件"><a href="#2-在主题内插入css和js文件" class="headerlink" title="2. 在主题内插入css和js文件"></a>2. 在主题内插入css和js文件</h2><p>为了调用<code>highlight.js</code>和对应的主题，我们在主题的<code>footer.ejs</code>文件中添加如下内容：</p>
<pre><code class="[js]">&lt;!-- Highlight.js --&gt;
&lt;link rel=&quot;stylesheet&quot;
        href=&quot;//highlightjs.org/static/demo/styles/night-owl.css&quot;&gt;
&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.5.0/highlight.min.js&quot;&gt;
&lt;/script&gt;
&lt;script&gt;
    hljs.initHighlightingOnLoad();
&lt;/script&gt;</code></pre>
<p>我这里采用的是CDN加速的<code>css</code>和<code>js</code>，主题的预览可以去<a href="https://highlightjs.org/static/demo/">highlight.js官网DEMO</a>去预览。</p>
<h2 id="3-post中代码模块的写法"><a href="#3-post中代码模块的写法" class="headerlink" title="3. post中代码模块的写法"></a>3. post中代码模块的写法</h2><p>由于<code>highlight.js</code>中自动判断代码种类的功能异常消耗资源，建议在写md文档时就表明代码的种类，便于<code>highlight.js</code>生成更好的效果。举例如下：</p>
<pre><code class="[md]">
    ``` [bash]
    $ npm install --save hexo-light-gallery
    ```
</code></pre>
<p>或者：</p>
<pre><code class="[md]">
    ``` [yml][_config.yml]
    highlight:
        enable: false
    ```
</code></pre>
<p>通过[    ]来引入语言的种类，具体可查询：<a href="https://github.com/highlightjs/highlight.js/blob/master/SUPPORTED_LANGUAGES.md">https://github.com/highlightjs/highlight.js/blob/master/SUPPORTED_LANGUAGES.md</a></p>
<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li>ziheng’s blog: <a href="https://zihengcat.github.io/2018/03/05/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0highlight-js%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE/">https://zihengcat.github.io/2018/03/05/Hexo博客添加highlight-js代码高亮/</a></li>
<li>highlight.js官网: <a href="https://highlightjs.org/">https://highlightjs.org/</a></li>
<li>highlight.js github：<a href="https://github.com/highlightjs/highlight.js/blob/master/SUPPORTED_LANGUAGES.md">https://github.com/highlightjs/highlight.js/blob/master/SUPPORTED_LANGUAGES.md</a></li>
</ul>
</div><script src="/js/lightgallery.min.js"></script><script src="/js/lg-thumbnail.js"></script><script src="/js/lg-zoom.js"></script><script src="/js/lg-autoplay.js"></script><script src="/js/lg-fullscreen.js"></script><script src="/js/lg-pager.js"></script><script src="/js/lg-hash.js"></script><script src="/js/lg-video.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>highlight.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客中Hexo-light-gallery插件的安装折腾</title>
    <url>/2021/01/12/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%ADhexo-light-gallery%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E6%8A%98%E8%85%BE/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/lightgallery.min.css" /><div class=".article-gallery"<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>作为一个摄影爱好者，在博客中展示图片是一个刚需。由于刚开始解除hexo，主题自带的的fancybox插件图片的展示效果实在是不太满意。在<a href="https://hexo.io/plugins/">hexo插件</a>中搜索一下，发现了一个看起来很满意的插件：<a href="https://github.com/lzane/hexo-light-gallery">Hexo-light-gallery</a><br><a href="https://img.imgdb.cn/item/5ffd5b603ffa7d37b3e435d0.jpg" title="Hexo-light-gallery" class="gallery-item"><img src="https://img.imgdb.cn/item/5ffd5b603ffa7d37b3e435d0.jpg" alt="Hexo-light-gallery"></a></p>
<span id="more"></span>
<p>但是作者写的说明不太清除，导致一部分人安装失败，很不幸，我也是其中之一。经过了长时间的折腾，终于明白了作者的意思。现在记录一下吧，或许有缘人看到也能参考一下。</p>
<h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><h3 id="1-安装插件；"><a href="#1-安装插件；" class="headerlink" title="1. 安装插件；"></a>1. 安装插件；</h3><pre><code class="[bash]">$ npm install --save hexo-light-gallery</code></pre>
<h3 id="2-下载最新的插件"><a href="#2-下载最新的插件" class="headerlink" title="2. 下载最新的插件"></a>2. 下载最新的插件</h3><p>   将<a href="https://github.com/sachinchoolur/lightgallery.js/tree/master/dist">lightgallery.js</a>插件的dist文件夹,将其中的js、css、img、fonts存到博客的/source/目录之下；</p>
<h3 id="3-下载以下的js文件"><a href="#3-下载以下的js文件" class="headerlink" title="3. 下载以下的js文件"></a>3. 下载以下的js文件</h3><p>   存到博客的/source/对应目录之下；</p>
<ul>
<li><p>lg-thumbnail: <a href="https://github.com/sachinchoolur/lg-thumbnail.js">https://github.com/sachinchoolur/lg-thumbnail.js</a></p>
</li>
<li><p>lg-thumbnail: <a href="https://github.com/sachinchoolur/lg-thumbnail.js">https://github.com/sachinchoolur/lg-thumbnail.js</a></p>
</li>
<li><p>lg-fullscreen: <a href="https://github.com/sachinchoolur/lg-fullscreen.js">https://github.com/sachinchoolur/lg-fullscreen.js</a></p>
</li>
<li><p>lg-zoom: <a href="https://github.com/sachinchoolur/lg-zoom.js">https://github.com/sachinchoolur/lg-zoom.js</a></p>
</li>
<li><p>lg-autoplay: <a href="https://github.com/sachinchoolur/lg-autoplay.js">https://github.com/sachinchoolur/lg-autoplay.js</a></p>
</li>
<li><p>lg-vedio: <a href="https://github.com/sachinchoolur/lg-video.js">https://github.com/sachinchoolur/lg-video.js</a></p>
</li>
<li><p>lg-hash: <a href="https://github.com/sachinchoolur/lg-hash.js">https://github.com/sachinchoolur/lg-hash.js</a></p>
</li>
<li><p>lg-paper: <a href="https://github.com/sachinchoolur/lg-pager.js">https://github.com/sachinchoolur/lg-pager.js</a></p>
<h3 id="4-修改hexo的配置文件"><a href="#4-修改hexo的配置文件" class="headerlink" title="4. 修改hexo的配置文件"></a>4. 修改hexo的配置文件</h3><p>修改hexo的配置文件_config.yml，注意不要修改主题的配置文件，在文件<code># Extensions</code>字段后加入以下内容，引用刚刚下载的js和css：</p>
<pre><code class="[yml][_config.yml]"># Extensions
## Plugins: https://hexo.io/plugins/

lightgallery:
# if you don&#39;t specify the css or js source, the default cdn will be used.
css: /css/lightgallery.min.css # css source url
js: /js/lightgallery.min.js #js source url
# sorry that I can not find any cdn hosting following plugins,
# please self-host the plugin js and add url here
plugins:
   lg-thumbnail: /js/lg-thumbnail.js
   lg-zoom: /js/lg-zoom.js
   lg-autoplay: /js/lg-autoplay.js
   lg-fullscreen: /js/lg-fullscreen.js
   lg-pager: /js/lg-pager.js
   lg-hash: /js/lg-hash.js
   lg-video: /js/lg-video.js</code></pre>
<h3 id="5-大功告成"><a href="#5-大功告成" class="headerlink" title="5. 大功告成"></a>5. 大功告成</h3><p>可以用<code>hexo server</code>命令预览一下，在有图片的页面点击图片，即可出现效果图中的样子。<br><a href="https://img.imgdb.cn/item/5ffd68da3ffa7d37b3ee83c8.jpg" class="gallery-item"><img src="https://img.imgdb.cn/item/5ffd68da3ffa7d37b3ee83c8.jpg"></a></p>
</li>
</ul>
<h2 id="避坑指南"><a href="#避坑指南" class="headerlink" title="避坑指南"></a>避坑指南</h2><p><del><strong>不要使用外链的js和css文件</strong>，在浏览器里查看过调试记录，外链的js文件无法执行，由于不是专业人员，暂不知如何解决。</del></p>
<ul>
<li>2021.1.13更新：外链填写时去掉https；或http就行，暂未测试。（新手中的新手，见笑了。）</li>
</ul>
</div><script src="/js/lightgallery.min.js"></script><script src="/js/lg-thumbnail.js"></script><script src="/js/lg-zoom.js"></script><script src="/js/lg-autoplay.js"></script><script src="/js/lg-fullscreen.js"></script><script src="/js/lg-pager.js"></script><script src="/js/lg-hash.js"></script><script src="/js/lg-video.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>gallery</tag>
      </tags>
  </entry>
  <entry>
    <title>显微摄影相册1_太阳蛾</title>
    <url>/2021/01/11/%E6%98%BE%E5%BE%AE%E6%91%84%E5%BD%B1%E7%9B%B8%E5%86%8C1_%E5%A4%AA%E9%98%B3%E8%9B%BE/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/lightgallery.min.css" /><div class=".article-gallery"<p>2020年的测试作品，记录一下。<br><a href="https://img.imgdb.cn/item/5ffd6cc43ffa7d37b3f1b6ad.jpg" title="合集" class="gallery-item"><img src="https://img.imgdb.cn/item/5ffd6cc43ffa7d37b3f1b6ad.jpg" alt="合集"></a></p>
<span id="more"></span>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://pic.imgdb.cn/item/5ffc2bbc3ffa7d37b315b7aa.jpg" title="太阳蛾" class="gallery-item"><img src="https://pic.imgdb.cn/item/5ffc2bbc3ffa7d37b315b7aa.jpg" alt="太阳蛾"></a></td>
<td><a href="https://pic.imgdb.cn/item/5ffc2bbc3ffa7d37b315b7ae.jpg" title="太阳蛾" class="gallery-item"><img src="https://pic.imgdb.cn/item/5ffc2bbc3ffa7d37b315b7ae.jpg" alt="太阳蛾"></a></td>
<td><a href="https://pic.imgdb.cn/item/5ffc2b9c3ffa7d37b3159de4.jpg" title="太阳蛾" class="gallery-item"><img src="https://pic.imgdb.cn/item/5ffc2b9c3ffa7d37b3159de4.jpg" alt="太阳蛾"></a></td>
</tr>
<tr>
<td><a href="https://pic.imgdb.cn/item/5ffc2b9c3ffa7d37b3159de6.jpg" title="太阳蛾" class="gallery-item"><img src="https://pic.imgdb.cn/item/5ffc2b9c3ffa7d37b3159de6.jpg" alt="太阳蛾"></a></td>
<td><a href="https://pic.imgdb.cn/item/5ffc2b9c3ffa7d37b3159de9.jpg" title="太阳蛾" class="gallery-item"><img src="https://pic.imgdb.cn/item/5ffc2b9c3ffa7d37b3159de9.jpg" alt="太阳蛾"></a></td>
<td><a href="https://pic.imgdb.cn/item/5ffc2b9c3ffa7d37b3159df2.jpg" title="太阳蛾" class="gallery-item"><img src="https://pic.imgdb.cn/item/5ffc2b9c3ffa7d37b3159df2.jpg" alt="太阳蛾"></a></td>
</tr>
<tr>
<td><a href="https://pic.imgdb.cn/item/5ffc2b9c3ffa7d37b3159df6.jpg" title="太阳蛾" class="gallery-item"><img src="https://pic.imgdb.cn/item/5ffc2b9c3ffa7d37b3159df6.jpg" alt="太阳蛾"></a></td>
<td><a href="https://pic.imgdb.cn/item/5ffc2a9c3ffa7d37b314e8da.jpg" title="太阳蛾" class="gallery-item"><img src="https://pic.imgdb.cn/item/5ffc2a9c3ffa7d37b314e8da.jpg" alt="太阳蛾"></a></td>
<td><a href="https://pic.imgdb.cn/item/5ffc2a9c3ffa7d37b314e8dd.jpg" title="太阳蛾" class="gallery-item"><img src="https://pic.imgdb.cn/item/5ffc2a9c3ffa7d37b314e8dd.jpg" alt="太阳蛾"></a></td>
</tr>
<tr>
<td><a href="https://pic.imgdb.cn/item/5ffc2a9c3ffa7d37b314e8e2.jpg" title="太阳蛾" class="gallery-item"><img src="https://pic.imgdb.cn/item/5ffc2a9c3ffa7d37b314e8e2.jpg" alt="太阳蛾"></a></td>
<td><a href="https://pic.imgdb.cn/item/5ffc2a9c3ffa7d37b314e8e5.jpg" title="太阳蛾" class="gallery-item"><img src="https://pic.imgdb.cn/item/5ffc2a9c3ffa7d37b314e8e5.jpg" alt="太阳蛾"></a></td>
<td><a href="https://pic.imgdb.cn/item/5ffc2a9c3ffa7d37b314e8e9.jpg" title="太阳蛾" class="gallery-item"><img src="https://pic.imgdb.cn/item/5ffc2a9c3ffa7d37b314e8e9.jpg" alt="太阳蛾"></a></td>
</tr>
</tbody></table>
<p>THE END.</p>
</div><script src="/js/lightgallery.min.js"></script><script src="/js/lg-thumbnail.js"></script><script src="/js/lg-zoom.js"></script><script src="/js/lg-autoplay.js"></script><script src="/js/lg-fullscreen.js"></script><script src="/js/lg-pager.js"></script><script src="/js/lg-hash.js"></script><script src="/js/lg-video.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
      <tags>
        <tag>显微摄影</tag>
        <tag>Wemacro</tag>
        <tag>Nikon ELWD</tag>
        <tag>太阳蛾</tag>
      </tags>
  </entry>
  <entry>
    <title>一场怀旧行动</title>
    <url>/2021/01/11/%E4%B8%80%E5%9C%BA%E6%80%80%E6%97%A7%E8%A1%8C%E5%8A%A8/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/lightgallery.min.css" /><div class=".article-gallery"<p>2020年就快要过去了，在这年底最后的一个月初，我和老婆迎来了我们的第一个孩子。女儿的来临给我们带来了无数的待做事项。也彻底改变了我们的生活。<span id="more"></span>照顾新生婴儿的疲倦和烦躁并没有冲淡我们对女儿的强烈的爱意。伴随着每天必须要来一杯的黑咖啡，这个博客也诞生在了工作和生活的间隙。我想到了我多年前的创作想法，在经历了太多的拖延之后，终于我鼓起勇气，敲起了键盘。</p>
<p>这一年的生活注定不是普普通通的，在年初疫情肆虐的时候。我同公司领导商定好这一年我在家远程办公。这一决定给我带来了充裕的时间。既没有了每日通勤的时间消耗。在工作告一段落时，也能在闲暇时光见缝插针的完成一些自己的小小折腾。完成了家里各种小米智能设备的homebridge连接，让苹果手机能用自带的功能完成家庭光源、空气净化器、TV等设备的控制。也优化了家庭的网络配置，加入了R2S软路由和adguard的全网广告过滤。同时在家里架设了各种NAS服务。以低成本的方案做出了我满意的效果。虽然在这个时间节点，博客已经被人遗忘，微博也渐渐式微，短视频风头正劲。但我仍旧喜欢这样的文字内容，虽然不会有人来看，但是这都是我最爱的方式。我称之为“一场怀旧行动”。</p>
<p><strong>那么，行动开始！</strong></p>
<p><em>此文章从<a href="">https://geek.xlyu.xyz</a>搬迁而来。</em></p>
</div><script src="/js/lightgallery.min.js"></script><script src="/js/lg-thumbnail.js"></script><script src="/js/lg-zoom.js"></script><script src="/js/lg-autoplay.js"></script><script src="/js/lg-fullscreen.js"></script><script src="/js/lg-pager.js"></script><script src="/js/lg-hash.js"></script><script src="/js/lg-video.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
  </entry>
</search>
